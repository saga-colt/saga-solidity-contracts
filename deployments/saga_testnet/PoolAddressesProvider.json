{
  "address": "0xE02F8dC1305840f8fbF8039B651c4199cB652e72",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "marketId",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "ACLAdminUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "ACLManagerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "AddressSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "proxyAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldImplementationAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newImplementationAddress",
          "type": "address"
        }
      ],
      "name": "AddressSetAsProxy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "oldMarketId",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "newMarketId",
          "type": "string"
        }
      ],
      "name": "MarketIdSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "PoolConfiguratorUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "PoolDataProviderUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "PoolUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "PriceOracleSentinelUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "PriceOracleUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "proxyAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementationAddress",
          "type": "address"
        }
      ],
      "name": "ProxyCreated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "getACLAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getACLManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "getAddressFromID",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMarketId",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPoolConfigurator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPoolDataProvider",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceOracle",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceOracleSentinel",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAclAdmin",
          "type": "address"
        }
      ],
      "name": "setACLAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAclManager",
          "type": "address"
        }
      ],
      "name": "setACLManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "setAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "newImplementationAddress",
          "type": "address"
        }
      ],
      "name": "setAddressAsProxy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newMarketId",
          "type": "string"
        }
      ],
      "name": "setMarketId",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newPoolConfiguratorImpl",
          "type": "address"
        }
      ],
      "name": "setPoolConfiguratorImpl",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newDataProvider",
          "type": "address"
        }
      ],
      "name": "setPoolDataProvider",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newPoolImpl",
          "type": "address"
        }
      ],
      "name": "setPoolImpl",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newPriceOracle",
          "type": "address"
        }
      ],
      "name": "setPriceOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newPriceOracleSentinel",
          "type": "address"
        }
      ],
      "name": "setPriceOracleSentinel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xae80aeaa95313eb87f40a55d86cf699b55def0ae7c61a314d98b18617d8218ef",
  "receipt": {
    "to": null,
    "from": "0xd2f775Ff2cD41bfe43C7A8c016eD10393553fe44",
    "contractAddress": "0xE02F8dC1305840f8fbF8039B651c4199cB652e72",
    "transactionIndex": 5,
    "gasUsed": "1619351",
    "logsBloom": "0x
    "blockHash": "0x69a5d7cb44256a9774222c967c3a18294f92a7723c0ebd6ba48d9baf21549bd3",
    "transactionHash": "0xae80aeaa95313eb87f40a55d86cf699b55def0ae7c61a314d98b18617d8218ef",
    "logs": [
      {
        "transactionIndex": 5,
        "blockNumber": 3753010,
        "transactionHash": "0xae80aeaa95313eb87f40a55d86cf699b55def0ae7c61a314d98b18617d8218ef",
        "address": "0xE02F8dC1305840f8fbF8039B651c4199cB652e72",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000d2f775ff2cd41bfe43c7a8c016ed10393553fe44"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x69a5d7cb44256a9774222c967c3a18294f92a7723c0ebd6ba48d9baf21549bd3"
      },
      {
        "transactionIndex": 5,
        "blockNumber": 3753010,
        "transactionHash": "0xae80aeaa95313eb87f40a55d86cf699b55def0ae7c61a314d98b18617d8218ef",
        "address": "0xE02F8dC1305840f8fbF8039B651c4199cB652e72",
        "topics": [
          "0xe685c8cdecc6030c45030fd54778812cb84ed8e4467c38294403d68ba7860823",
          "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
          "0x044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0x69a5d7cb44256a9774222c967c3a18294f92a7723c0ebd6ba48d9baf21549bd3"
      },
      {
        "transactionIndex": 5,
        "blockNumber": 3753010,
        "transactionHash": "0xae80aeaa95313eb87f40a55d86cf699b55def0ae7c61a314d98b18617d8218ef",
        "address": "0xE02F8dC1305840f8fbF8039B651c4199cB652e72",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x000000000000000000000000d2f775ff2cd41bfe43c7a8c016ed10393553fe44",
          "0x000000000000000000000000d2f775ff2cd41bfe43c7a8c016ed10393553fe44"
        ],
        "data": "0x",
        "logIndex": 2,
        "blockHash": "0x69a5d7cb44256a9774222c967c3a18294f92a7723c0ebd6ba48d9baf21549bd3"
      }
    ],
    "blockNumber": 3753010,
    "cumulativeGasUsed": "7869351",
    "status": 1,
    "byzantium": true
  },
  "args": ["0", "0xd2f775Ff2cD41bfe43C7A8c016eD10393553fe44"],
  "numDeployments": 1,
  "solcInputHash": "3119f14c142cd6db245e027e6458c4b3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"marketId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ACLAdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ACLManagerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"AddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldImplementationAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementationAddress\",\"type\":\"address\"}],\"name\":\"AddressSetAsProxy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"oldMarketId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"newMarketId\",\"type\":\"string\"}],\"name\":\"MarketIdSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PoolConfiguratorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PoolDataProviderUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PoolUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PriceOracleSentinelUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PriceOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementationAddress\",\"type\":\"address\"}],\"name\":\"ProxyCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getACLAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getACLManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getAddressFromID\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMarketId\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolConfigurator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolDataProvider\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceOracleSentinel\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAclAdmin\",\"type\":\"address\"}],\"name\":\"setACLAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAclManager\",\"type\":\"address\"}],\"name\":\"setACLManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"newImplementationAddress\",\"type\":\"address\"}],\"name\":\"setAddressAsProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newMarketId\",\"type\":\"string\"}],\"name\":\"setMarketId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPoolConfiguratorImpl\",\"type\":\"address\"}],\"name\":\"setPoolConfiguratorImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDataProvider\",\"type\":\"address\"}],\"name\":\"setPoolDataProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPoolImpl\",\"type\":\"address\"}],\"name\":\"setPoolImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPriceOracle\",\"type\":\"address\"}],\"name\":\"setPriceOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPriceOracleSentinel\",\"type\":\"address\"}],\"name\":\"setPriceOracleSentinel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave\",\"details\":\"Acts as factory of proxies and admin of those, so with right to change its implementationsOwned by the Aave Governance\",\"events\":{\"ACLAdminUpdated(address,address)\":{\"details\":\"Emitted when the ACL admin is updated.\",\"params\":{\"newAddress\":\"The new address of the ACLAdmin\",\"oldAddress\":\"The old address of the ACLAdmin\"}},\"ACLManagerUpdated(address,address)\":{\"details\":\"Emitted when the ACL manager is updated.\",\"params\":{\"newAddress\":\"The new address of the ACLManager\",\"oldAddress\":\"The old address of the ACLManager\"}},\"AddressSet(bytes32,address,address)\":{\"details\":\"Emitted when a new non-proxied contract address is registered.\",\"params\":{\"id\":\"The identifier of the contract\",\"newAddress\":\"The address of the new contract\",\"oldAddress\":\"The address of the old contract\"}},\"AddressSetAsProxy(bytes32,address,address,address)\":{\"details\":\"Emitted when the implementation of the proxy registered with id is updated\",\"params\":{\"id\":\"The identifier of the contract\",\"newImplementationAddress\":\"The address of the new implementation contract\",\"oldImplementationAddress\":\"The address of the old implementation contract\",\"proxyAddress\":\"The address of the proxy contract\"}},\"MarketIdSet(string,string)\":{\"details\":\"Emitted when the market identifier is updated.\",\"params\":{\"newMarketId\":\"The new id of the market\",\"oldMarketId\":\"The old id of the market\"}},\"PoolConfiguratorUpdated(address,address)\":{\"details\":\"Emitted when the pool configurator is updated.\",\"params\":{\"newAddress\":\"The new address of the PoolConfigurator\",\"oldAddress\":\"The old address of the PoolConfigurator\"}},\"PoolDataProviderUpdated(address,address)\":{\"details\":\"Emitted when the pool data provider is updated.\",\"params\":{\"newAddress\":\"The new address of the PoolDataProvider\",\"oldAddress\":\"The old address of the PoolDataProvider\"}},\"PoolUpdated(address,address)\":{\"details\":\"Emitted when the pool is updated.\",\"params\":{\"newAddress\":\"The new address of the Pool\",\"oldAddress\":\"The old address of the Pool\"}},\"PriceOracleSentinelUpdated(address,address)\":{\"details\":\"Emitted when the price oracle sentinel is updated.\",\"params\":{\"newAddress\":\"The new address of the PriceOracleSentinel\",\"oldAddress\":\"The old address of the PriceOracleSentinel\"}},\"PriceOracleUpdated(address,address)\":{\"details\":\"Emitted when the price oracle is updated.\",\"params\":{\"newAddress\":\"The new address of the PriceOracle\",\"oldAddress\":\"The old address of the PriceOracle\"}},\"ProxyCreated(bytes32,address,address)\":{\"details\":\"Emitted when a new proxy is created.\",\"params\":{\"id\":\"The identifier of the proxy\",\"implementationAddress\":\"The address of the implementation contract\",\"proxyAddress\":\"The address of the created proxy contract\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Constructor.\",\"params\":{\"marketId\":\"The identifier of the market.\",\"owner\":\"The owner address of this contract.\"}},\"getACLAdmin()\":{\"returns\":{\"_0\":\"The address of the ACL admin\"}},\"getACLManager()\":{\"returns\":{\"_0\":\"The address of the ACLManager\"}},\"getAddressFromID(bytes32)\":{\"details\":\"The returned address might be an EOA or a contract, potentially proxiedIt returns ZERO if there is no registered address with the given id\",\"params\":{\"id\":\"The id\"},\"returns\":{\"_0\":\"The address of the registered for the specified id\"}},\"getMarketId()\":{\"returns\":{\"_0\":\"The market id\"}},\"getPool()\":{\"returns\":{\"_0\":\"The Pool proxy address\"}},\"getPoolConfigurator()\":{\"returns\":{\"_0\":\"The PoolConfigurator proxy address\"}},\"getPoolDataProvider()\":{\"returns\":{\"_0\":\"The address of the DataProvider\"}},\"getPriceOracle()\":{\"returns\":{\"_0\":\"The address of the PriceOracle\"}},\"getPriceOracleSentinel()\":{\"returns\":{\"_0\":\"The address of the PriceOracleSentinel\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setACLAdmin(address)\":{\"params\":{\"newAclAdmin\":\"The address of the new ACL admin\"}},\"setACLManager(address)\":{\"params\":{\"newAclManager\":\"The address of the new ACLManager\"}},\"setAddress(bytes32,address)\":{\"details\":\"IMPORTANT Use this function carefully, as it will do a hard replacement\",\"params\":{\"id\":\"The id\",\"newAddress\":\"The address to set\"}},\"setAddressAsProxy(bytes32,address)\":{\"details\":\"IMPORTANT Use this function carefully, only for ids that don't have an explicit setter function, in order to avoid unexpected consequences\",\"params\":{\"id\":\"The id\",\"newImplementationAddress\":\"The address of the new implementation\"}},\"setMarketId(string)\":{\"details\":\"This can be used to create an onchain registry of PoolAddressesProviders to identify and validate multiple Aave markets.\",\"params\":{\"newMarketId\":\"The market id\"}},\"setPoolConfiguratorImpl(address)\":{\"params\":{\"newPoolConfiguratorImpl\":\"The new PoolConfigurator implementation\"}},\"setPoolDataProvider(address)\":{\"params\":{\"newDataProvider\":\"The address of the new DataProvider\"}},\"setPoolImpl(address)\":{\"params\":{\"newPoolImpl\":\"The new Pool implementation\"}},\"setPriceOracle(address)\":{\"params\":{\"newPriceOracle\":\"The address of the new PriceOracle\"}},\"setPriceOracleSentinel(address)\":{\"params\":{\"newPriceOracleSentinel\":\"The address of the new PriceOracleSentinel\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"PoolAddressesProvider\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getACLAdmin()\":{\"notice\":\"Returns the address of the ACL admin.\"},\"getACLManager()\":{\"notice\":\"Returns the address of the ACL manager.\"},\"getAddressFromID(bytes32)\":{\"notice\":\"Returns an address by its identifier.\"},\"getMarketId()\":{\"notice\":\"Returns the id of the Aave market to which this contract points to.\"},\"getPool()\":{\"notice\":\"Returns the address of the Pool proxy.\"},\"getPoolConfigurator()\":{\"notice\":\"Returns the address of the PoolConfigurator proxy.\"},\"getPoolDataProvider()\":{\"notice\":\"Returns the address of the data provider.\"},\"getPriceOracle()\":{\"notice\":\"Returns the address of the price oracle.\"},\"getPriceOracleSentinel()\":{\"notice\":\"Returns the address of the price oracle sentinel.\"},\"setACLAdmin(address)\":{\"notice\":\"Updates the address of the ACL admin.\"},\"setACLManager(address)\":{\"notice\":\"Updates the address of the ACL manager.\"},\"setAddress(bytes32,address)\":{\"notice\":\"Sets an address for an id replacing the address saved in the addresses map.\"},\"setAddressAsProxy(bytes32,address)\":{\"notice\":\"General function to update the implementation of a proxy registered with certain `id`. If there is no proxy registered, it will instantiate one and set as implementation the `newImplementationAddress`.\"},\"setMarketId(string)\":{\"notice\":\"Associates an id with a specific PoolAddressesProvider.\"},\"setPoolConfiguratorImpl(address)\":{\"notice\":\"Updates the implementation of the PoolConfigurator, or creates a proxy setting the new `PoolConfigurator` implementation when the function is called for the first time.\"},\"setPoolDataProvider(address)\":{\"notice\":\"Updates the address of the data provider.\"},\"setPoolImpl(address)\":{\"notice\":\"Updates the implementation of the Pool, or creates a proxy setting the new `pool` implementation when the function is called for the first time.\"},\"setPriceOracle(address)\":{\"notice\":\"Updates the address of the price oracle.\"},\"setPriceOracleSentinel(address)\":{\"notice\":\"Updates the address of the price oracle sentinel.\"}},\"notice\":\"Main registry of addresses part of or connected to the protocol, including permissioned roles\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dlend/core/protocol/configuration/PoolAddressesProvider.sol\":\"PoolAddressesProvider\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dlend/core/dependencies/openzeppelin/contracts/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n/* \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 *\\n *    _____     ______   ______     __     __   __     __     ______   __  __       *\\n *   /\\\\  __-.  /\\\\__  _\\\\ /\\\\  == \\\\   /\\\\ \\\\   /\\\\ \\\"-.\\\\ \\\\   /\\\\ \\\\   /\\\\__  _\\\\ /\\\\ \\\\_\\\\ \\\\      *\\n *   \\\\ \\\\ \\\\/\\\\ \\\\ \\\\/_/\\\\ \\\\/ \\\\ \\\\  __<   \\\\ \\\\ \\\\  \\\\ \\\\ \\\\-.  \\\\  \\\\ \\\\ \\\\  \\\\/_/\\\\ \\\\/ \\\\ \\\\____ \\\\     *\\n *    \\\\ \\\\____-    \\\\ \\\\_\\\\  \\\\ \\\\_\\\\ \\\\_\\\\  \\\\ \\\\_\\\\  \\\\ \\\\_\\\\\\\\\\\"\\\\_\\\\  \\\\ \\\\_\\\\    \\\\ \\\\_\\\\  \\\\/\\\\_____\\\\    *\\n *     \\\\/____/     \\\\/_/   \\\\/_/ /_/   \\\\/_/   \\\\/_/ \\\\/_/   \\\\/_/     \\\\/_/   \\\\/_____/    *\\n *                                                                                  *\\n * \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 dtrinity.org \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 *\\n *                                                                                  *\\n *                                         \\u25b2                                        *\\n *                                        \\u25b2 \\u25b2                                       *\\n *                                                                                  *\\n * \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 *\\n * dTRINITY Protocol: https://github.com/dtrinity                                   *\\n * \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 */\\n\\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(\\n            address(this).balance >= amount,\\n            \\\"Address: insufficient balance\\\"\\n        );\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(\\n            success,\\n            \\\"Address: unable to send value, recipient may have reverted\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data\\n    ) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return\\n            functionCallWithValue(\\n                target,\\n                data,\\n                value,\\n                \\\"Address: low-level call with value failed\\\"\\n            );\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(\\n            address(this).balance >= value,\\n            \\\"Address: insufficient balance for call\\\"\\n        );\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(\\n            data\\n        );\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data\\n    ) internal view returns (bytes memory) {\\n        return\\n            functionStaticCall(\\n                target,\\n                data,\\n                \\\"Address: low-level static call failed\\\"\\n            );\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data\\n    ) internal returns (bytes memory) {\\n        return\\n            functionDelegateCall(\\n                target,\\n                data,\\n                \\\"Address: low-level delegate call failed\\\"\\n            );\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x91b19d28ecdffd12683d57f45de12dfb16ad320851abdbbdee57bcbe6811a966\",\"license\":\"MIT\"},\"contracts/dlend/core/dependencies/openzeppelin/contracts/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n/* \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 *\\n *    _____     ______   ______     __     __   __     __     ______   __  __       *\\n *   /\\\\  __-.  /\\\\__  _\\\\ /\\\\  == \\\\   /\\\\ \\\\   /\\\\ \\\"-.\\\\ \\\\   /\\\\ \\\\   /\\\\__  _\\\\ /\\\\ \\\\_\\\\ \\\\      *\\n *   \\\\ \\\\ \\\\/\\\\ \\\\ \\\\/_/\\\\ \\\\/ \\\\ \\\\  __<   \\\\ \\\\ \\\\  \\\\ \\\\ \\\\-.  \\\\  \\\\ \\\\ \\\\  \\\\/_/\\\\ \\\\/ \\\\ \\\\____ \\\\     *\\n *    \\\\ \\\\____-    \\\\ \\\\_\\\\  \\\\ \\\\_\\\\ \\\\_\\\\  \\\\ \\\\_\\\\  \\\\ \\\\_\\\\\\\\\\\"\\\\_\\\\  \\\\ \\\\_\\\\    \\\\ \\\\_\\\\  \\\\/\\\\_____\\\\    *\\n *     \\\\/____/     \\\\/_/   \\\\/_/ /_/   \\\\/_/   \\\\/_/ \\\\/_/   \\\\/_/     \\\\/_/   \\\\/_____/    *\\n *                                                                                  *\\n * \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 dtrinity.org \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 *\\n *                                                                                  *\\n *                                         \\u25b2                                        *\\n *                                        \\u25b2 \\u25b2                                       *\\n *                                                                                  *\\n * \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 *\\n * dTRINITY Protocol: https://github.com/dtrinity                                   *\\n * \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 */\\n\\npragma solidity ^0.8.20;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return payable(msg.sender);\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x9ef3ccc6bac1a64e04e2df68349e76a73a7c4d7f83a6f82dd012401823e93650\",\"license\":\"MIT\"},\"contracts/dlend/core/dependencies/openzeppelin/contracts/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n/* \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 *\\n *    _____     ______   ______     __     __   __     __     ______   __  __       *\\n *   /\\\\  __-.  /\\\\__  _\\\\ /\\\\  == \\\\   /\\\\ \\\\   /\\\\ \\\"-.\\\\ \\\\   /\\\\ \\\\   /\\\\__  _\\\\ /\\\\ \\\\_\\\\ \\\\      *\\n *   \\\\ \\\\ \\\\/\\\\ \\\\ \\\\/_/\\\\ \\\\/ \\\\ \\\\  __<   \\\\ \\\\ \\\\  \\\\ \\\\ \\\\-.  \\\\  \\\\ \\\\ \\\\  \\\\/_/\\\\ \\\\/ \\\\ \\\\____ \\\\     *\\n *    \\\\ \\\\____-    \\\\ \\\\_\\\\  \\\\ \\\\_\\\\ \\\\_\\\\  \\\\ \\\\_\\\\  \\\\ \\\\_\\\\\\\\\\\"\\\\_\\\\  \\\\ \\\\_\\\\    \\\\ \\\\_\\\\  \\\\/\\\\_____\\\\    *\\n *     \\\\/____/     \\\\/_/   \\\\/_/ /_/   \\\\/_/   \\\\/_/ \\\\/_/   \\\\/_/     \\\\/_/   \\\\/_____/    *\\n *                                                                                  *\\n * \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 dtrinity.org \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 *\\n *                                                                                  *\\n *                                         \\u25b2                                        *\\n *                                        \\u25b2 \\u25b2                                       *\\n *                                                                                  *\\n * \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 *\\n * dTRINITY Protocol: https://github.com/dtrinity                                   *\\n * \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 */\\n\\npragma solidity ^0.8.20;\\n\\nimport \\\"./Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\ncontract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(\\n        address indexed previousOwner,\\n        address indexed newOwner\\n    );\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(\\n            newOwner != address(0),\\n            \\\"Ownable: new owner is the zero address\\\"\\n        );\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x519389ee11faaf940a5fdd0a2edee0b4effbbcedc64ffb2a11fe321df2f5c269\",\"license\":\"MIT\"},\"contracts/dlend/core/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\n/* \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 *\\n *    _____     ______   ______     __     __   __     __     ______   __  __       *\\n *   /\\\\  __-.  /\\\\__  _\\\\ /\\\\  == \\\\   /\\\\ \\\\   /\\\\ \\\"-.\\\\ \\\\   /\\\\ \\\\   /\\\\__  _\\\\ /\\\\ \\\\_\\\\ \\\\      *\\n *   \\\\ \\\\ \\\\/\\\\ \\\\ \\\\/_/\\\\ \\\\/ \\\\ \\\\  __<   \\\\ \\\\ \\\\  \\\\ \\\\ \\\\-.  \\\\  \\\\ \\\\ \\\\  \\\\/_/\\\\ \\\\/ \\\\ \\\\____ \\\\     *\\n *    \\\\ \\\\____-    \\\\ \\\\_\\\\  \\\\ \\\\_\\\\ \\\\_\\\\  \\\\ \\\\_\\\\  \\\\ \\\\_\\\\\\\\\\\"\\\\_\\\\  \\\\ \\\\_\\\\    \\\\ \\\\_\\\\  \\\\/\\\\_____\\\\    *\\n *     \\\\/____/     \\\\/_/   \\\\/_/ /_/   \\\\/_/   \\\\/_/ \\\\/_/   \\\\/_/     \\\\/_/   \\\\/_____/    *\\n *                                                                                  *\\n * \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 dtrinity.org \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 *\\n *                                                                                  *\\n *                                         \\u25b2                                        *\\n *                                        \\u25b2 \\u25b2                                       *\\n *                                                                                  *\\n * \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 *\\n * dTRINITY Protocol: https://github.com/dtrinity                                   *\\n * \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 */\\n\\npragma solidity ^0.8.20;\\n\\nimport \\\"./Proxy.sol\\\";\\nimport \\\"../contracts/Address.sol\\\";\\n\\n/**\\n * @title BaseUpgradeabilityProxy\\n * @dev This contract implements a proxy that allows to change the\\n * implementation address to which it will delegate.\\n * Such a change is called an implementation upgrade.\\n */\\ncontract BaseUpgradeabilityProxy is Proxy {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     * @param implementation Address of the new implementation.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant IMPLEMENTATION_SLOT =\\n        0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation.\\n     * @return impl Address of the current implementation\\n     */\\n    function _implementation() internal view override returns (address impl) {\\n        bytes32 slot = IMPLEMENTATION_SLOT;\\n        //solium-disable-next-line\\n        assembly {\\n            impl := sload(slot)\\n        }\\n    }\\n\\n    /**\\n     * @dev Upgrades the proxy to a new implementation.\\n     * @param newImplementation Address of the new implementation.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Sets the implementation address of the proxy.\\n     * @param newImplementation Address of the new implementation.\\n     */\\n    function _setImplementation(address newImplementation) internal {\\n        require(\\n            Address.isContract(newImplementation),\\n            \\\"Cannot set a proxy implementation to a non-contract address\\\"\\n        );\\n\\n        bytes32 slot = IMPLEMENTATION_SLOT;\\n\\n        //solium-disable-next-line\\n        assembly {\\n            sstore(slot, newImplementation)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x7995c60428694e51cb38a20192e15628abb3f9462667db2f10309ab0ca5f148d\",\"license\":\"AGPL-3.0\"},\"contracts/dlend/core/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\n/* \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 *\\n *    _____     ______   ______     __     __   __     __     ______   __  __       *\\n *   /\\\\  __-.  /\\\\__  _\\\\ /\\\\  == \\\\   /\\\\ \\\\   /\\\\ \\\"-.\\\\ \\\\   /\\\\ \\\\   /\\\\__  _\\\\ /\\\\ \\\\_\\\\ \\\\      *\\n *   \\\\ \\\\ \\\\/\\\\ \\\\ \\\\/_/\\\\ \\\\/ \\\\ \\\\  __<   \\\\ \\\\ \\\\  \\\\ \\\\ \\\\-.  \\\\  \\\\ \\\\ \\\\  \\\\/_/\\\\ \\\\/ \\\\ \\\\____ \\\\     *\\n *    \\\\ \\\\____-    \\\\ \\\\_\\\\  \\\\ \\\\_\\\\ \\\\_\\\\  \\\\ \\\\_\\\\  \\\\ \\\\_\\\\\\\\\\\"\\\\_\\\\  \\\\ \\\\_\\\\    \\\\ \\\\_\\\\  \\\\/\\\\_____\\\\    *\\n *     \\\\/____/     \\\\/_/   \\\\/_/ /_/   \\\\/_/   \\\\/_/ \\\\/_/   \\\\/_/     \\\\/_/   \\\\/_____/    *\\n *                                                                                  *\\n * \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 dtrinity.org \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 *\\n *                                                                                  *\\n *                                         \\u25b2                                        *\\n *                                        \\u25b2 \\u25b2                                       *\\n *                                                                                  *\\n * \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 *\\n * dTRINITY Protocol: https://github.com/dtrinity                                   *\\n * \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 */\\n\\npragma solidity ^0.8.20;\\n\\nimport \\\"./BaseUpgradeabilityProxy.sol\\\";\\n\\n/**\\n * @title InitializableUpgradeabilityProxy\\n * @dev Extends BaseUpgradeabilityProxy with an initializer for initializing\\n * implementation and init data.\\n */\\ncontract InitializableUpgradeabilityProxy is BaseUpgradeabilityProxy {\\n    /**\\n     * @dev Contract initializer.\\n     * @param _logic Address of the initial implementation.\\n     * @param _data Data to send as msg.data to the implementation to initialize the proxied contract.\\n     * It should include the signature and the parameters of the function to be called, as described in\\n     * https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.\\n     * This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.\\n     */\\n    function initialize(address _logic, bytes memory _data) public payable {\\n        require(_implementation() == address(0));\\n        assert(\\n            IMPLEMENTATION_SLOT ==\\n                bytes32(uint256(keccak256(\\\"eip1967.proxy.implementation\\\")) - 1)\\n        );\\n        _setImplementation(_logic);\\n        if (_data.length > 0) {\\n            (bool success, ) = _logic.delegatecall(_data);\\n            require(success);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x46b594aa49a51e9d25b73531d52a1acca18e3e4401f91b13b77e6d83d12ba412\",\"license\":\"AGPL-3.0\"},\"contracts/dlend/core/dependencies/openzeppelin/upgradeability/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\n/* \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 *\\n *    _____     ______   ______     __     __   __     __     ______   __  __       *\\n *   /\\\\  __-.  /\\\\__  _\\\\ /\\\\  == \\\\   /\\\\ \\\\   /\\\\ \\\"-.\\\\ \\\\   /\\\\ \\\\   /\\\\__  _\\\\ /\\\\ \\\\_\\\\ \\\\      *\\n *   \\\\ \\\\ \\\\/\\\\ \\\\ \\\\/_/\\\\ \\\\/ \\\\ \\\\  __<   \\\\ \\\\ \\\\  \\\\ \\\\ \\\\-.  \\\\  \\\\ \\\\ \\\\  \\\\/_/\\\\ \\\\/ \\\\ \\\\____ \\\\     *\\n *    \\\\ \\\\____-    \\\\ \\\\_\\\\  \\\\ \\\\_\\\\ \\\\_\\\\  \\\\ \\\\_\\\\  \\\\ \\\\_\\\\\\\\\\\"\\\\_\\\\  \\\\ \\\\_\\\\    \\\\ \\\\_\\\\  \\\\/\\\\_____\\\\    *\\n *     \\\\/____/     \\\\/_/   \\\\/_/ /_/   \\\\/_/   \\\\/_/ \\\\/_/   \\\\/_/     \\\\/_/   \\\\/_____/    *\\n *                                                                                  *\\n * \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 dtrinity.org \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 *\\n *                                                                                  *\\n *                                         \\u25b2                                        *\\n *                                        \\u25b2 \\u25b2                                       *\\n *                                                                                  *\\n * \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 *\\n * dTRINITY Protocol: https://github.com/dtrinity                                   *\\n * \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 */\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title Proxy\\n * @dev Implements delegation of calls to other contracts, with proper\\n * forwarding of return values and bubbling of failures.\\n * It defines a fallback function that delegates all calls to the address\\n * returned by the abstract _implementation() internal function.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Fallback function.\\n     * Will run if no other function in the contract matches the call data.\\n     * Implemented entirely in `_fallback`.\\n     */\\n    fallback() external payable {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @return The Address of the implementation.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates execution to an implementation contract.\\n     * This is a low level function that doesn't return to its internal call site.\\n     * It will return to the external caller whatever the implementation returns.\\n     * @param implementation Address to delegate.\\n     */\\n    function _delegate(address implementation) internal {\\n        //solium-disable-next-line\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(\\n                gas(),\\n                implementation,\\n                0,\\n                calldatasize(),\\n                0,\\n                0\\n            )\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Function that is run as the first thing in the fallback function.\\n     * Can be redefined in derived contracts to add functionality.\\n     * Redefinitions must call super._willFallback().\\n     */\\n    function _willFallback() internal virtual {}\\n\\n    /**\\n     * @dev fallback implementation.\\n     * Extracted to enable manual triggering.\\n     */\\n    function _fallback() internal {\\n        _willFallback();\\n        _delegate(_implementation());\\n    }\\n}\\n\",\"keccak256\":\"0xc57ae25870d1c98270cc6087988252a348ed34ed5758779c101a0cdf228438a7\",\"license\":\"AGPL-3.0\"},\"contracts/dlend/core/interfaces/IPoolAddressesProvider.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\n/* \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 *\\n *    _____     ______   ______     __     __   __     __     ______   __  __       *\\n *   /\\\\  __-.  /\\\\__  _\\\\ /\\\\  == \\\\   /\\\\ \\\\   /\\\\ \\\"-.\\\\ \\\\   /\\\\ \\\\   /\\\\__  _\\\\ /\\\\ \\\\_\\\\ \\\\      *\\n *   \\\\ \\\\ \\\\/\\\\ \\\\ \\\\/_/\\\\ \\\\/ \\\\ \\\\  __<   \\\\ \\\\ \\\\  \\\\ \\\\ \\\\-.  \\\\  \\\\ \\\\ \\\\  \\\\/_/\\\\ \\\\/ \\\\ \\\\____ \\\\     *\\n *    \\\\ \\\\____-    \\\\ \\\\_\\\\  \\\\ \\\\_\\\\ \\\\_\\\\  \\\\ \\\\_\\\\  \\\\ \\\\_\\\\\\\\\\\"\\\\_\\\\  \\\\ \\\\_\\\\    \\\\ \\\\_\\\\  \\\\/\\\\_____\\\\    *\\n *     \\\\/____/     \\\\/_/   \\\\/_/ /_/   \\\\/_/   \\\\/_/ \\\\/_/   \\\\/_/     \\\\/_/   \\\\/_____/    *\\n *                                                                                  *\\n * \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 dtrinity.org \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 *\\n *                                                                                  *\\n *                                         \\u25b2                                        *\\n *                                        \\u25b2 \\u25b2                                       *\\n *                                                                                  *\\n * \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 *\\n * dTRINITY Protocol: https://github.com/dtrinity                                   *\\n * \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 */\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title IPoolAddressesProvider\\n * @author Aave\\n * @notice Defines the basic interface for a Pool Addresses Provider.\\n */\\ninterface IPoolAddressesProvider {\\n    /**\\n     * @dev Emitted when the market identifier is updated.\\n     * @param oldMarketId The old id of the market\\n     * @param newMarketId The new id of the market\\n     */\\n    event MarketIdSet(string indexed oldMarketId, string indexed newMarketId);\\n\\n    /**\\n     * @dev Emitted when the pool is updated.\\n     * @param oldAddress The old address of the Pool\\n     * @param newAddress The new address of the Pool\\n     */\\n    event PoolUpdated(address indexed oldAddress, address indexed newAddress);\\n\\n    /**\\n     * @dev Emitted when the pool configurator is updated.\\n     * @param oldAddress The old address of the PoolConfigurator\\n     * @param newAddress The new address of the PoolConfigurator\\n     */\\n    event PoolConfiguratorUpdated(\\n        address indexed oldAddress,\\n        address indexed newAddress\\n    );\\n\\n    /**\\n     * @dev Emitted when the price oracle is updated.\\n     * @param oldAddress The old address of the PriceOracle\\n     * @param newAddress The new address of the PriceOracle\\n     */\\n    event PriceOracleUpdated(\\n        address indexed oldAddress,\\n        address indexed newAddress\\n    );\\n\\n    /**\\n     * @dev Emitted when the ACL manager is updated.\\n     * @param oldAddress The old address of the ACLManager\\n     * @param newAddress The new address of the ACLManager\\n     */\\n    event ACLManagerUpdated(\\n        address indexed oldAddress,\\n        address indexed newAddress\\n    );\\n\\n    /**\\n     * @dev Emitted when the ACL admin is updated.\\n     * @param oldAddress The old address of the ACLAdmin\\n     * @param newAddress The new address of the ACLAdmin\\n     */\\n    event ACLAdminUpdated(\\n        address indexed oldAddress,\\n        address indexed newAddress\\n    );\\n\\n    /**\\n     * @dev Emitted when the price oracle sentinel is updated.\\n     * @param oldAddress The old address of the PriceOracleSentinel\\n     * @param newAddress The new address of the PriceOracleSentinel\\n     */\\n    event PriceOracleSentinelUpdated(\\n        address indexed oldAddress,\\n        address indexed newAddress\\n    );\\n\\n    /**\\n     * @dev Emitted when the pool data provider is updated.\\n     * @param oldAddress The old address of the PoolDataProvider\\n     * @param newAddress The new address of the PoolDataProvider\\n     */\\n    event PoolDataProviderUpdated(\\n        address indexed oldAddress,\\n        address indexed newAddress\\n    );\\n\\n    /**\\n     * @dev Emitted when a new proxy is created.\\n     * @param id The identifier of the proxy\\n     * @param proxyAddress The address of the created proxy contract\\n     * @param implementationAddress The address of the implementation contract\\n     */\\n    event ProxyCreated(\\n        bytes32 indexed id,\\n        address indexed proxyAddress,\\n        address indexed implementationAddress\\n    );\\n\\n    /**\\n     * @dev Emitted when a new non-proxied contract address is registered.\\n     * @param id The identifier of the contract\\n     * @param oldAddress The address of the old contract\\n     * @param newAddress The address of the new contract\\n     */\\n    event AddressSet(\\n        bytes32 indexed id,\\n        address indexed oldAddress,\\n        address indexed newAddress\\n    );\\n\\n    /**\\n     * @dev Emitted when the implementation of the proxy registered with id is updated\\n     * @param id The identifier of the contract\\n     * @param proxyAddress The address of the proxy contract\\n     * @param oldImplementationAddress The address of the old implementation contract\\n     * @param newImplementationAddress The address of the new implementation contract\\n     */\\n    event AddressSetAsProxy(\\n        bytes32 indexed id,\\n        address indexed proxyAddress,\\n        address oldImplementationAddress,\\n        address indexed newImplementationAddress\\n    );\\n\\n    /**\\n     * @notice Returns the id of the Aave market to which this contract points to.\\n     * @return The market id\\n     */\\n    function getMarketId() external view returns (string memory);\\n\\n    /**\\n     * @notice Associates an id with a specific PoolAddressesProvider.\\n     * @dev This can be used to create an onchain registry of PoolAddressesProviders to\\n     * identify and validate multiple Aave markets.\\n     * @param newMarketId The market id\\n     */\\n    function setMarketId(string calldata newMarketId) external;\\n\\n    /**\\n     * @notice Returns an address by its identifier.\\n     * @dev The returned address might be an EOA or a contract, potentially proxied\\n     * @dev It returns ZERO if there is no registered address with the given id\\n     * @param id The id\\n     * @return The address of the registered for the specified id\\n     */\\n    function getAddressFromID(bytes32 id) external view returns (address);\\n\\n    /**\\n     * @notice General function to update the implementation of a proxy registered with\\n     * certain `id`. If there is no proxy registered, it will instantiate one and\\n     * set as implementation the `newImplementationAddress`.\\n     * @dev IMPORTANT Use this function carefully, only for ids that don't have an explicit\\n     * setter function, in order to avoid unexpected consequences\\n     * @param id The id\\n     * @param newImplementationAddress The address of the new implementation\\n     */\\n    function setAddressAsProxy(\\n        bytes32 id,\\n        address newImplementationAddress\\n    ) external;\\n\\n    /**\\n     * @notice Sets an address for an id replacing the address saved in the addresses map.\\n     * @dev IMPORTANT Use this function carefully, as it will do a hard replacement\\n     * @param id The id\\n     * @param newAddress The address to set\\n     */\\n    function setAddress(bytes32 id, address newAddress) external;\\n\\n    /**\\n     * @notice Returns the address of the Pool proxy.\\n     * @return The Pool proxy address\\n     */\\n    function getPool() external view returns (address);\\n\\n    /**\\n     * @notice Updates the implementation of the Pool, or creates a proxy\\n     * setting the new `pool` implementation when the function is called for the first time.\\n     * @param newPoolImpl The new Pool implementation\\n     */\\n    function setPoolImpl(address newPoolImpl) external;\\n\\n    /**\\n     * @notice Returns the address of the PoolConfigurator proxy.\\n     * @return The PoolConfigurator proxy address\\n     */\\n    function getPoolConfigurator() external view returns (address);\\n\\n    /**\\n     * @notice Updates the implementation of the PoolConfigurator, or creates a proxy\\n     * setting the new `PoolConfigurator` implementation when the function is called for the first time.\\n     * @param newPoolConfiguratorImpl The new PoolConfigurator implementation\\n     */\\n    function setPoolConfiguratorImpl(address newPoolConfiguratorImpl) external;\\n\\n    /**\\n     * @notice Returns the address of the price oracle.\\n     * @return The address of the PriceOracle\\n     */\\n    function getPriceOracle() external view returns (address);\\n\\n    /**\\n     * @notice Updates the address of the price oracle.\\n     * @param newPriceOracle The address of the new PriceOracle\\n     */\\n    function setPriceOracle(address newPriceOracle) external;\\n\\n    /**\\n     * @notice Returns the address of the ACL manager.\\n     * @return The address of the ACLManager\\n     */\\n    function getACLManager() external view returns (address);\\n\\n    /**\\n     * @notice Updates the address of the ACL manager.\\n     * @param newAclManager The address of the new ACLManager\\n     */\\n    function setACLManager(address newAclManager) external;\\n\\n    /**\\n     * @notice Returns the address of the ACL admin.\\n     * @return The address of the ACL admin\\n     */\\n    function getACLAdmin() external view returns (address);\\n\\n    /**\\n     * @notice Updates the address of the ACL admin.\\n     * @param newAclAdmin The address of the new ACL admin\\n     */\\n    function setACLAdmin(address newAclAdmin) external;\\n\\n    /**\\n     * @notice Returns the address of the price oracle sentinel.\\n     * @return The address of the PriceOracleSentinel\\n     */\\n    function getPriceOracleSentinel() external view returns (address);\\n\\n    /**\\n     * @notice Updates the address of the price oracle sentinel.\\n     * @param newPriceOracleSentinel The address of the new PriceOracleSentinel\\n     */\\n    function setPriceOracleSentinel(address newPriceOracleSentinel) external;\\n\\n    /**\\n     * @notice Returns the address of the data provider.\\n     * @return The address of the DataProvider\\n     */\\n    function getPoolDataProvider() external view returns (address);\\n\\n    /**\\n     * @notice Updates the address of the data provider.\\n     * @param newDataProvider The address of the new DataProvider\\n     */\\n    function setPoolDataProvider(address newDataProvider) external;\\n}\\n\",\"keccak256\":\"0x351127e1f52bdabe039a4c4a977d595b063955047328cbf57853727ff767ccde\",\"license\":\"AGPL-3.0\"},\"contracts/dlend/core/protocol/configuration/PoolAddressesProvider.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n/* \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 *\\n *    _____     ______   ______     __     __   __     __     ______   __  __       *\\n *   /\\\\  __-.  /\\\\__  _\\\\ /\\\\  == \\\\   /\\\\ \\\\   /\\\\ \\\"-.\\\\ \\\\   /\\\\ \\\\   /\\\\__  _\\\\ /\\\\ \\\\_\\\\ \\\\      *\\n *   \\\\ \\\\ \\\\/\\\\ \\\\ \\\\/_/\\\\ \\\\/ \\\\ \\\\  __<   \\\\ \\\\ \\\\  \\\\ \\\\ \\\\-.  \\\\  \\\\ \\\\ \\\\  \\\\/_/\\\\ \\\\/ \\\\ \\\\____ \\\\     *\\n *    \\\\ \\\\____-    \\\\ \\\\_\\\\  \\\\ \\\\_\\\\ \\\\_\\\\  \\\\ \\\\_\\\\  \\\\ \\\\_\\\\\\\\\\\"\\\\_\\\\  \\\\ \\\\_\\\\    \\\\ \\\\_\\\\  \\\\/\\\\_____\\\\    *\\n *     \\\\/____/     \\\\/_/   \\\\/_/ /_/   \\\\/_/   \\\\/_/ \\\\/_/   \\\\/_/     \\\\/_/   \\\\/_____/    *\\n *                                                                                  *\\n * \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 dtrinity.org \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 *\\n *                                                                                  *\\n *                                         \\u25b2                                        *\\n *                                        \\u25b2 \\u25b2                                       *\\n *                                                                                  *\\n * \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 *\\n * dTRINITY Protocol: https://github.com/dtrinity                                   *\\n * \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 */\\n\\npragma solidity ^0.8.20;\\n\\nimport {Ownable} from \\\"../../dependencies/openzeppelin/contracts/Ownable.sol\\\";\\nimport {IPoolAddressesProvider} from \\\"../../interfaces/IPoolAddressesProvider.sol\\\";\\nimport {InitializableImmutableAdminUpgradeabilityProxy} from \\\"../libraries/aave-upgradeability/InitializableImmutableAdminUpgradeabilityProxy.sol\\\";\\n\\n/**\\n * @title PoolAddressesProvider\\n * @author Aave\\n * @notice Main registry of addresses part of or connected to the protocol, including permissioned roles\\n * @dev Acts as factory of proxies and admin of those, so with right to change its implementations\\n * @dev Owned by the Aave Governance\\n */\\ncontract PoolAddressesProvider is Ownable, IPoolAddressesProvider {\\n    // Identifier of the Aave Market\\n    string private _marketId;\\n\\n    // Map of registered addresses (identifier => registeredAddress)\\n    mapping(bytes32 => address) private _addresses;\\n\\n    // Main identifiers\\n    bytes32 private constant POOL = \\\"POOL\\\";\\n    bytes32 private constant POOL_CONFIGURATOR = \\\"POOL_CONFIGURATOR\\\";\\n    bytes32 private constant PRICE_ORACLE = \\\"PRICE_ORACLE\\\";\\n    bytes32 private constant ACL_MANAGER = \\\"ACL_MANAGER\\\";\\n    bytes32 private constant ACL_ADMIN = \\\"ACL_ADMIN\\\";\\n    bytes32 private constant PRICE_ORACLE_SENTINEL = \\\"PRICE_ORACLE_SENTINEL\\\";\\n    bytes32 private constant DATA_PROVIDER = \\\"DATA_PROVIDER\\\";\\n\\n    /**\\n     * @dev Constructor.\\n     * @param marketId The identifier of the market.\\n     * @param owner The owner address of this contract.\\n     */\\n    constructor(string memory marketId, address owner) {\\n        _setMarketId(marketId);\\n        transferOwnership(owner);\\n    }\\n\\n    /// @inheritdoc IPoolAddressesProvider\\n    function getMarketId() external view override returns (string memory) {\\n        return _marketId;\\n    }\\n\\n    /// @inheritdoc IPoolAddressesProvider\\n    function setMarketId(\\n        string memory newMarketId\\n    ) external override onlyOwner {\\n        _setMarketId(newMarketId);\\n    }\\n\\n    /// @inheritdoc IPoolAddressesProvider\\n    function getAddressFromID(\\n        bytes32 id\\n    ) public view override returns (address) {\\n        return _addresses[id];\\n    }\\n\\n    /// @inheritdoc IPoolAddressesProvider\\n    function setAddress(\\n        bytes32 id,\\n        address newAddress\\n    ) external override onlyOwner {\\n        address oldAddress = _addresses[id];\\n        _addresses[id] = newAddress;\\n        emit AddressSet(id, oldAddress, newAddress);\\n    }\\n\\n    /// @inheritdoc IPoolAddressesProvider\\n    function setAddressAsProxy(\\n        bytes32 id,\\n        address newImplementationAddress\\n    ) external override onlyOwner {\\n        address proxyAddress = _addresses[id];\\n        address oldImplementationAddress = _getProxyImplementation(id);\\n        _updateImpl(id, newImplementationAddress);\\n        emit AddressSetAsProxy(\\n            id,\\n            proxyAddress,\\n            oldImplementationAddress,\\n            newImplementationAddress\\n        );\\n    }\\n\\n    /// @inheritdoc IPoolAddressesProvider\\n    function getPool() external view override returns (address) {\\n        return getAddressFromID(POOL);\\n    }\\n\\n    /// @inheritdoc IPoolAddressesProvider\\n    function setPoolImpl(address newPoolImpl) external override onlyOwner {\\n        address oldPoolImpl = _getProxyImplementation(POOL);\\n        _updateImpl(POOL, newPoolImpl);\\n        emit PoolUpdated(oldPoolImpl, newPoolImpl);\\n    }\\n\\n    /// @inheritdoc IPoolAddressesProvider\\n    function getPoolConfigurator() external view override returns (address) {\\n        return getAddressFromID(POOL_CONFIGURATOR);\\n    }\\n\\n    /// @inheritdoc IPoolAddressesProvider\\n    function setPoolConfiguratorImpl(\\n        address newPoolConfiguratorImpl\\n    ) external override onlyOwner {\\n        address oldPoolConfiguratorImpl = _getProxyImplementation(\\n            POOL_CONFIGURATOR\\n        );\\n        _updateImpl(POOL_CONFIGURATOR, newPoolConfiguratorImpl);\\n        emit PoolConfiguratorUpdated(\\n            oldPoolConfiguratorImpl,\\n            newPoolConfiguratorImpl\\n        );\\n    }\\n\\n    /// @inheritdoc IPoolAddressesProvider\\n    function getPriceOracle() external view override returns (address) {\\n        return getAddressFromID(PRICE_ORACLE);\\n    }\\n\\n    /// @inheritdoc IPoolAddressesProvider\\n    function setPriceOracle(\\n        address newPriceOracle\\n    ) external override onlyOwner {\\n        address oldPriceOracle = _addresses[PRICE_ORACLE];\\n        _addresses[PRICE_ORACLE] = newPriceOracle;\\n        emit PriceOracleUpdated(oldPriceOracle, newPriceOracle);\\n    }\\n\\n    /// @inheritdoc IPoolAddressesProvider\\n    function getACLManager() external view override returns (address) {\\n        return getAddressFromID(ACL_MANAGER);\\n    }\\n\\n    /// @inheritdoc IPoolAddressesProvider\\n    function setACLManager(address newAclManager) external override onlyOwner {\\n        address oldAclManager = _addresses[ACL_MANAGER];\\n        _addresses[ACL_MANAGER] = newAclManager;\\n        emit ACLManagerUpdated(oldAclManager, newAclManager);\\n    }\\n\\n    /// @inheritdoc IPoolAddressesProvider\\n    function getACLAdmin() external view override returns (address) {\\n        return getAddressFromID(ACL_ADMIN);\\n    }\\n\\n    /// @inheritdoc IPoolAddressesProvider\\n    function setACLAdmin(address newAclAdmin) external override onlyOwner {\\n        address oldAclAdmin = _addresses[ACL_ADMIN];\\n        _addresses[ACL_ADMIN] = newAclAdmin;\\n        emit ACLAdminUpdated(oldAclAdmin, newAclAdmin);\\n    }\\n\\n    /// @inheritdoc IPoolAddressesProvider\\n    function getPriceOracleSentinel() external view override returns (address) {\\n        return getAddressFromID(PRICE_ORACLE_SENTINEL);\\n    }\\n\\n    /// @inheritdoc IPoolAddressesProvider\\n    function setPriceOracleSentinel(\\n        address newPriceOracleSentinel\\n    ) external override onlyOwner {\\n        address oldPriceOracleSentinel = _addresses[PRICE_ORACLE_SENTINEL];\\n        _addresses[PRICE_ORACLE_SENTINEL] = newPriceOracleSentinel;\\n        emit PriceOracleSentinelUpdated(\\n            oldPriceOracleSentinel,\\n            newPriceOracleSentinel\\n        );\\n    }\\n\\n    /// @inheritdoc IPoolAddressesProvider\\n    function getPoolDataProvider() external view override returns (address) {\\n        return getAddressFromID(DATA_PROVIDER);\\n    }\\n\\n    /// @inheritdoc IPoolAddressesProvider\\n    function setPoolDataProvider(\\n        address newDataProvider\\n    ) external override onlyOwner {\\n        address oldDataProvider = _addresses[DATA_PROVIDER];\\n        _addresses[DATA_PROVIDER] = newDataProvider;\\n        emit PoolDataProviderUpdated(oldDataProvider, newDataProvider);\\n    }\\n\\n    /**\\n     * @notice Internal function to update the implementation of a specific proxied component of the protocol.\\n     * @dev If there is no proxy registered with the given identifier, it creates the proxy setting `newAddress`\\n     *   as implementation and calls the initialize() function on the proxy\\n     * @dev If there is already a proxy registered, it just updates the implementation to `newAddress` and\\n     *   calls the initialize() function via upgradeToAndCall() in the proxy\\n     * @param id The id of the proxy to be updated\\n     * @param newAddress The address of the new implementation\\n     */\\n    function _updateImpl(bytes32 id, address newAddress) internal {\\n        address proxyAddress = _addresses[id];\\n        InitializableImmutableAdminUpgradeabilityProxy proxy;\\n        bytes memory params = abi.encodeWithSignature(\\n            \\\"initialize(address)\\\",\\n            address(this)\\n        );\\n\\n        if (proxyAddress == address(0)) {\\n            proxy = new InitializableImmutableAdminUpgradeabilityProxy(\\n                address(this)\\n            );\\n            _addresses[id] = proxyAddress = address(proxy);\\n            proxy.initialize(newAddress, params);\\n            emit ProxyCreated(id, proxyAddress, newAddress);\\n        } else {\\n            proxy = InitializableImmutableAdminUpgradeabilityProxy(\\n                payable(proxyAddress)\\n            );\\n            proxy.upgradeToAndCall(newAddress, params);\\n        }\\n    }\\n\\n    /**\\n     * @notice Updates the identifier of the Aave market.\\n     * @param newMarketId The new id of the market\\n     */\\n    function _setMarketId(string memory newMarketId) internal {\\n        string memory oldMarketId = _marketId;\\n        _marketId = newMarketId;\\n        emit MarketIdSet(oldMarketId, newMarketId);\\n    }\\n\\n    /**\\n     * @notice Returns the the implementation contract of the proxy contract by its identifier.\\n     * @dev It returns ZERO if there is no registered address with the given id\\n     * @dev It reverts if the registered address with the given id is not `InitializableImmutableAdminUpgradeabilityProxy`\\n     * @param id The id\\n     * @return The address of the implementation contract\\n     */\\n    function _getProxyImplementation(bytes32 id) internal returns (address) {\\n        address proxyAddress = _addresses[id];\\n        if (proxyAddress == address(0)) {\\n            return address(0);\\n        } else {\\n            address payable payableProxyAddress = payable(proxyAddress);\\n            return\\n                InitializableImmutableAdminUpgradeabilityProxy(\\n                    payableProxyAddress\\n                ).implementation();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xef8fa8f782846f23fe7dcfea5ee33272810a446f35a942070c0cfb6b20ddd59a\",\"license\":\"BUSL-1.1\"},\"contracts/dlend/core/protocol/libraries/aave-upgradeability/BaseImmutableAdminUpgradeabilityProxy.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\n/* \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 *\\n *    _____     ______   ______     __     __   __     __     ______   __  __       *\\n *   /\\\\  __-.  /\\\\__  _\\\\ /\\\\  == \\\\   /\\\\ \\\\   /\\\\ \\\"-.\\\\ \\\\   /\\\\ \\\\   /\\\\__  _\\\\ /\\\\ \\\\_\\\\ \\\\      *\\n *   \\\\ \\\\ \\\\/\\\\ \\\\ \\\\/_/\\\\ \\\\/ \\\\ \\\\  __<   \\\\ \\\\ \\\\  \\\\ \\\\ \\\\-.  \\\\  \\\\ \\\\ \\\\  \\\\/_/\\\\ \\\\/ \\\\ \\\\____ \\\\     *\\n *    \\\\ \\\\____-    \\\\ \\\\_\\\\  \\\\ \\\\_\\\\ \\\\_\\\\  \\\\ \\\\_\\\\  \\\\ \\\\_\\\\\\\\\\\"\\\\_\\\\  \\\\ \\\\_\\\\    \\\\ \\\\_\\\\  \\\\/\\\\_____\\\\    *\\n *     \\\\/____/     \\\\/_/   \\\\/_/ /_/   \\\\/_/   \\\\/_/ \\\\/_/   \\\\/_/     \\\\/_/   \\\\/_____/    *\\n *                                                                                  *\\n * \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 dtrinity.org \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 *\\n *                                                                                  *\\n *                                         \\u25b2                                        *\\n *                                        \\u25b2 \\u25b2                                       *\\n *                                                                                  *\\n * \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 *\\n * dTRINITY Protocol: https://github.com/dtrinity                                   *\\n * \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 */\\n\\npragma solidity ^0.8.20;\\n\\nimport {BaseUpgradeabilityProxy} from \\\"../../../dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol\\\";\\n\\n/**\\n * @title BaseImmutableAdminUpgradeabilityProxy\\n * @author Aave, inspired by the OpenZeppelin upgradeability proxy pattern\\n * @notice This contract combines an upgradeability proxy with an authorization\\n * mechanism for administrative tasks.\\n * @dev The admin role is stored in an immutable, which helps saving transactions costs\\n * All external functions in this contract must be guarded by the\\n * `ifAdmin` modifier. See ethereum/solidity#3864 for a Solidity\\n * feature proposal that would enable this to be done automatically.\\n */\\ncontract BaseImmutableAdminUpgradeabilityProxy is BaseUpgradeabilityProxy {\\n    address internal immutable _admin;\\n\\n    /**\\n     * @dev Constructor.\\n     * @param adminAddress The address of the admin\\n     */\\n    constructor(address adminAddress) {\\n        _admin = adminAddress;\\n    }\\n\\n    modifier ifAdmin() {\\n        if (msg.sender == _admin) {\\n            _;\\n        } else {\\n            _fallback();\\n        }\\n    }\\n\\n    /**\\n     * @notice Return the admin address\\n     * @return The address of the proxy admin.\\n     */\\n    function admin() external ifAdmin returns (address) {\\n        return _admin;\\n    }\\n\\n    /**\\n     * @notice Return the implementation address\\n     * @return The address of the implementation.\\n     */\\n    function implementation() external ifAdmin returns (address) {\\n        return _implementation();\\n    }\\n\\n    /**\\n     * @notice Upgrade the backing implementation of the proxy.\\n     * @dev Only the admin can call this function.\\n     * @param newImplementation The address of the new implementation.\\n     */\\n    function upgradeTo(address newImplementation) external ifAdmin {\\n        _upgradeTo(newImplementation);\\n    }\\n\\n    /**\\n     * @notice Upgrade the backing implementation of the proxy and call a function\\n     * on the new implementation.\\n     * @dev This is useful to initialize the proxied contract.\\n     * @param newImplementation The address of the new implementation.\\n     * @param data Data to send as msg.data in the low level call.\\n     * It should include the signature and the parameters of the function to be called, as described in\\n     * https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.\\n     */\\n    function upgradeToAndCall(\\n        address newImplementation,\\n        bytes calldata data\\n    ) external payable ifAdmin {\\n        _upgradeTo(newImplementation);\\n        (bool success, ) = newImplementation.delegatecall(data);\\n        require(success);\\n    }\\n\\n    /**\\n     * @notice Only fall back when the sender is not the admin.\\n     */\\n    function _willFallback() internal virtual override {\\n        require(\\n            msg.sender != _admin,\\n            \\\"Cannot call fallback function from the proxy admin\\\"\\n        );\\n        super._willFallback();\\n    }\\n}\\n\",\"keccak256\":\"0xd54e5f50c07841364948332ae83153e1fe2ea42d365e4f81bbe4188ca1e0dcb3\",\"license\":\"AGPL-3.0\"},\"contracts/dlend/core/protocol/libraries/aave-upgradeability/InitializableImmutableAdminUpgradeabilityProxy.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\n/* \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 *\\n *    _____     ______   ______     __     __   __     __     ______   __  __       *\\n *   /\\\\  __-.  /\\\\__  _\\\\ /\\\\  == \\\\   /\\\\ \\\\   /\\\\ \\\"-.\\\\ \\\\   /\\\\ \\\\   /\\\\__  _\\\\ /\\\\ \\\\_\\\\ \\\\      *\\n *   \\\\ \\\\ \\\\/\\\\ \\\\ \\\\/_/\\\\ \\\\/ \\\\ \\\\  __<   \\\\ \\\\ \\\\  \\\\ \\\\ \\\\-.  \\\\  \\\\ \\\\ \\\\  \\\\/_/\\\\ \\\\/ \\\\ \\\\____ \\\\     *\\n *    \\\\ \\\\____-    \\\\ \\\\_\\\\  \\\\ \\\\_\\\\ \\\\_\\\\  \\\\ \\\\_\\\\  \\\\ \\\\_\\\\\\\\\\\"\\\\_\\\\  \\\\ \\\\_\\\\    \\\\ \\\\_\\\\  \\\\/\\\\_____\\\\    *\\n *     \\\\/____/     \\\\/_/   \\\\/_/ /_/   \\\\/_/   \\\\/_/ \\\\/_/   \\\\/_/     \\\\/_/   \\\\/_____/    *\\n *                                                                                  *\\n * \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 dtrinity.org \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 *\\n *                                                                                  *\\n *                                         \\u25b2                                        *\\n *                                        \\u25b2 \\u25b2                                       *\\n *                                                                                  *\\n * \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 *\\n * dTRINITY Protocol: https://github.com/dtrinity                                   *\\n * \\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014\\u2014 */\\n\\npragma solidity ^0.8.20;\\n\\nimport {InitializableUpgradeabilityProxy} from \\\"../../../dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol\\\";\\nimport {Proxy} from \\\"../../../dependencies/openzeppelin/upgradeability/Proxy.sol\\\";\\nimport {BaseImmutableAdminUpgradeabilityProxy} from \\\"./BaseImmutableAdminUpgradeabilityProxy.sol\\\";\\n\\n/**\\n * @title InitializableAdminUpgradeabilityProxy\\n * @author Aave\\n * @dev Extends BaseAdminUpgradeabilityProxy with an initializer function\\n */\\ncontract InitializableImmutableAdminUpgradeabilityProxy is\\n    BaseImmutableAdminUpgradeabilityProxy,\\n    InitializableUpgradeabilityProxy\\n{\\n    /**\\n     * @dev Constructor.\\n     * @param admin The address of the admin\\n     */\\n    constructor(address admin) BaseImmutableAdminUpgradeabilityProxy(admin) {\\n        // Intentionally left blank\\n    }\\n\\n    /// @inheritdoc BaseImmutableAdminUpgradeabilityProxy\\n    function _willFallback()\\n        internal\\n        override(BaseImmutableAdminUpgradeabilityProxy, Proxy)\\n    {\\n        BaseImmutableAdminUpgradeabilityProxy._willFallback();\\n    }\\n}\\n\",\"keccak256\":\"0xd8fcd9f8bd79a72d53afb06f5225865894555bfd9f26ddbd80e75ac507432973\",\"license\":\"AGPL-3.0\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162002079380380620020798339810160408190526200003491620002f1565b600080546001600160a01b0319163390811782556040519091829160008051602062002059833981519152908290a3506200006f8262000082565b6200007a8162000187565b505062000539565b6000600180546200009390620003be565b80601f0160208091040260200160405190810160405280929190818152602001828054620000c190620003be565b8015620001125780601f10620000e65761010080835404028352916020019162000112565b820191906000526020600020905b815481529060010190602001808311620000f457829003601f168201915b5050505050905081600190816200012a91906200044f565b50816040516200013b91906200051b565b6040518091039020816040516200015391906200051b565b604051908190038120907fe685c8cdecc6030c45030fd54778812cb84ed8e4467c38294403d68ba786082390600090a35050565b6000546001600160a01b03163314620001e75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b0381166200024e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401620001de565b600080546040516001600160a01b03808516939216916000805160206200205983398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620002cb578181015183820152602001620002b1565b50506000910152565b80516001600160a01b0381168114620002ec57600080fd5b919050565b600080604083850312156200030557600080fd5b82516001600160401b03808211156200031d57600080fd5b818501915085601f8301126200033257600080fd5b81518181111562000347576200034762000298565b604051601f8201601f19908116603f0116810190838211818310171562000372576200037262000298565b816040528281528860208487010111156200038c57600080fd5b6200039f836020830160208801620002ae565b8096505050505050620003b560208401620002d4565b90509250929050565b600181811c90821680620003d357607f821691505b602082108103620003f457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200044a576000816000526020600020601f850160051c81016020861015620004255750805b601f850160051c820191505b81811015620004465782815560010162000431565b5050505b505050565b81516001600160401b038111156200046b576200046b62000298565b62000483816200047c8454620003be565b84620003fa565b602080601f831160018114620004bb5760008415620004a25750858301515b600019600386901b1c1916600185901b17855562000446565b600085815260208120601f198616915b82811015620004ec57888601518255948401946001909101908401620004cb565b50858210156200050b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082516200052f818460208701620002ae565b9190910192915050565b611b1080620005496000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80638da5cb5b116100b8578063e4ca28b71161007c578063e4ca28b714610254578063e860accb14610267578063ed301ca91461026f578063f2fde38b14610282578063f67b184714610295578063fca513a8146102a857600080fd5b80638da5cb5b146101f7578063a156440614610208578063ae7f78f91461021b578063ca446dd91461022e578063e44e9ed11461024157600080fd5b80635eb88d3d1161010a5780635eb88d3d146101b1578063631adfca146101b9578063707cd716146101c1578063715018a6146101c957806374944cec146101d157806376d84ffc146101e457600080fd5b8063026b1d5f146101475780630e67178c1461016c578063530e784f14610174578063568ef470146101895780635dcc528c1461019e575b600080fd5b61014f6102b0565b6040516001600160a01b0390911681526020015b60405180910390f35b61014f6102c7565b610187610182366004610f31565b6102de565b005b610191610399565b6040516101639190610fa5565b6101876101ac366004610fb8565b61042b565b61014f6104d0565b61014f6104f3565b61014f610512565b61018761052b565b6101876101df366004610f31565b61059f565b6101876101f2366004610f31565b61065a565b6000546001600160a01b031661014f565b610187610216366004610f31565b610709565b61014f610229366004610fe8565b61079c565b61018761023c366004610fb8565b6107b7565b61018761024f366004610f31565b61083f565b610187610262366004610f31565b6108f2565b61014f61099f565b61018761027d366004610f31565b6109ba565b610187610290366004610f31565b610a6b565b6101876102a3366004611017565b610b55565b61014f610b8b565b60006102c2631413d3d360e21b61079c565b905090565b60006102c26820a1a62fa0a226a4a760b91b61079c565b6000546001600160a01b031633146103115760405162461bcd60e51b8152600401610308906110c8565b60405180910390fd5b6b50524943455f4f5241434c4560a01b600090815260026020527f740f710666bd7a12af42df98311e541e47f7fd33d382d11602457a6d540cbd6380546001600160a01b038481166001600160a01b03198316811790935560405191169283917f56b5f80d8cac1479698aa7d01605fd6111e90b15fc4d2b377417f46034876cbd9190a35050565b6060600180546103a8906110fd565b80601f01602080910402602001604051908101604052809291908181526020018280546103d4906110fd565b80156104215780601f106103f657610100808354040283529160200191610421565b820191906000526020600020905b81548152906001019060200180831161040457829003601f168201915b5050505050905090565b6000546001600160a01b031633146104555760405162461bcd60e51b8152600401610308906110c8565b6000828152600260205260408120546001600160a01b03169061047784610ba5565b90506104838484610c42565b6040516001600160a01b038281168252808516919084169086907f3bbd45b5429b385e3fb37ad5cd1cd1435a3c8ec32196c7937597365a3fd3e99c9060200160405180910390a450505050565b60006102c27414149250d157d3d49050d31157d4d1539512539153605a1b61079c565b60006102c2702827a7a62fa1a7a72324a3aaa920aa27a960791b61079c565b60006102c26a20a1a62fa6a0a720a3a2a960a91b61079c565b6000546001600160a01b031633146105555760405162461bcd60e51b8152600401610308906110c8565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146105c95760405162461bcd60e51b8152600401610308906110c8565b7414149250d157d3d49050d31157d4d1539512539153605a1b600090815260026020527f0d2c1bcee56447b4f46248272f34207a580a5c40f666a31f4e2fbb470ea53ab880546001600160a01b038481166001600160a01b03198316811790935560405191169283917f5326514eeca90494a14bedabcff812a0e683029ee85d1e23824d44fd14cd6ae79190a35050565b6000546001600160a01b031633146106845760405162461bcd60e51b8152600401610308906110c8565b6820a1a62fa0a226a4a760b91b600090815260026020527ffab167ad2009dcb80ee379700bb4bd029d97c1181ed9d961625632c8a6f051c680546001600160a01b038481166001600160a01b03198316811790935560405191169283917fe9cf53972264dc95304fd424458745019ddfca0e37ae8f703d74772c41ad115b9190a35050565b6000546001600160a01b031633146107335760405162461bcd60e51b8152600401610308906110c8565b6000610745631413d3d360e21b610ba5565b9050610758631413d3d360e21b83610c42565b816001600160a01b0316816001600160a01b03167f90affc163f1a2dfedcd36aa02ed992eeeba8100a4014f0b4cdc20ea265a6662760405160405180910390a35050565b6000908152600260205260409020546001600160a01b031690565b6000546001600160a01b031633146107e15760405162461bcd60e51b8152600401610308906110c8565b60008281526002602052604080822080546001600160a01b031981166001600160a01b038681169182179093559251911692839186917f9ef0e8c8e52743bb38b83b17d9429141d494b8041ca6d616a6c77cebae9cd8b791a4505050565b6000546001600160a01b031633146108695760405162461bcd60e51b8152600401610308906110c8565b6c2220aa20afa82927ab24a222a960991b600090815260026020527fcd7944601aaa5cd7ccdae1bebec659e98c6aac8f12486b30e59db0d39698051f80546001600160a01b038481166001600160a01b03198316811790935560405191169283917fc853974cfbf81487a14a23565917bee63f527853bcb5fa54f2ae1cdf8a38356d9190a35050565b6000546001600160a01b0316331461091c5760405162461bcd60e51b8152600401610308906110c8565b600061093b702827a7a62fa1a7a72324a3aaa920aa27a960791b610ba5565b905061095b702827a7a62fa1a7a72324a3aaa920aa27a960791b83610c42565b816001600160a01b0316816001600160a01b03167f8932892569eba59c8382a089d9b732d1f49272878775235761a2a6b0309cd46560405160405180910390a35050565b60006102c26c2220aa20afa82927ab24a222a960991b61079c565b6000546001600160a01b031633146109e45760405162461bcd60e51b8152600401610308906110c8565b6a20a1a62fa6a0a720a3a2a960a91b600090815260026020527f9edef266ef35fd0c6e131df0f31a330f3dd4c4d19dd31ed615c21d005c68116b80546001600160a01b038481166001600160a01b03198316811790935560405191169283917fb30efa04327bb8a537d61cc1e5c48095345ad18ef7cc04e6bacf7dfb6caaf5079190a35050565b6000546001600160a01b03163314610a955760405162461bcd60e51b8152600401610308906110c8565b6001600160a01b038116610afa5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610308565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610b7f5760405162461bcd60e51b8152600401610308906110c8565b610b8881610e18565b50565b60006102c26b50524943455f4f5241434c4560a01b61079c565b6000818152600260205260408120546001600160a01b031680610bcb5750600092915050565b6000819050806001600160a01b0316635c60da1b6040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610c10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c349190611131565b949350505050565b50919050565b6000828152600260205260408082205490513060248201526001600160a01b039091169190819060440160408051601f198184030181529190526020810180516001600160e01b031663189acdbd60e31b17905290506001600160a01b038316610dad5730604051610cb390610f0f565b6001600160a01b039091168152602001604051809103906000f080158015610cdf573d6000803e3d6000fd5b506000868152600260205260409081902080546001600160a01b0319166001600160a01b038416908117909155905163347d5e2560e21b81529194508493509063d1f5789490610d35908790859060040161114e565b600060405180830381600087803b158015610d4f57600080fd5b505af1158015610d63573d6000803e3d6000fd5b50505050836001600160a01b0316836001600160a01b0316867f4a465a9bd819d9662563c1e11ae958f8109e437e7f4bf1c6ef0b9a7b3f35d47860405160405180910390a4610e11565b60405163278f794360e11b81528392506001600160a01b03831690634f1ef28690610dde908790859060040161114e565b600060405180830381600087803b158015610df857600080fd5b505af1158015610e0c573d6000803e3d6000fd5b505050505b5050505050565b600060018054610e27906110fd565b80601f0160208091040260200160405190810160405280929190818152602001828054610e53906110fd565b8015610ea05780601f10610e7557610100808354040283529160200191610ea0565b820191906000526020600020905b815481529060010190602001808311610e8357829003601f168201915b505050505090508160019081610eb691906111c3565b5081604051610ec59190611283565b604051809103902081604051610edb9190611283565b604051908190038120907fe685c8cdecc6030c45030fd54778812cb84ed8e4467c38294403d68ba786082390600090a35050565b61083b806112a083390190565b6001600160a01b0381168114610b8857600080fd5b600060208284031215610f4357600080fd5b8135610f4e81610f1c565b9392505050565b60005b83811015610f70578181015183820152602001610f58565b50506000910152565b60008151808452610f91816020860160208601610f55565b601f01601f19169290920160200192915050565b602081526000610f4e6020830184610f79565b60008060408385031215610fcb57600080fd5b823591506020830135610fdd81610f1c565b809150509250929050565b600060208284031215610ffa57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561102957600080fd5b813567ffffffffffffffff8082111561104157600080fd5b818401915084601f83011261105557600080fd5b81358181111561106757611067611001565b604051601f8201601f19908116603f0116810190838211818310171561108f5761108f611001565b816040528281528760208487010111156110a857600080fd5b826020860160208301376000928101602001929092525095945050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181811c9082168061111157607f821691505b602082108103610c3c57634e487b7160e01b600052602260045260246000fd5b60006020828403121561114357600080fd5b8151610f4e81610f1c565b6001600160a01b0383168152604060208201819052600090610c3490830184610f79565b601f8211156111be576000816000526020600020601f850160051c8101602086101561119b5750805b601f850160051c820191505b818110156111ba578281556001016111a7565b5050505b505050565b815167ffffffffffffffff8111156111dd576111dd611001565b6111f1816111eb84546110fd565b84611172565b602080601f831160018114611226576000841561120e5750858301515b600019600386901b1c1916600185901b1785556111ba565b600085815260208120601f198616915b8281101561125557888601518255948401946001909101908401611236565b50858210156112735787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008251611295818460208701610f55565b919091019291505056fe60a060405234801561001057600080fd5b5060405161083b38038061083b83398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b60805161078d6100ae60003960008181610112015281816101560152818161020e0152818161034d015281816103760152610499015261078d6000f3fe60806040526004361061004a5760003560e01c80633659cfe6146100545780634f1ef286146100745780635c60da1b14610087578063d1f57894146100b8578063f851a440146100cb575b6100526100e0565b005b34801561006057600080fd5b5061005261006f36600461053e565b610108565b610052610082366004610560565b61014c565b34801561009357600080fd5b5061009c610202565b6040516001600160a01b03909116815260200160405180910390f35b6100526100c63660046105f9565b610253565b3480156100d757600080fd5b5061009c610341565b6100e8610398565b6101066101016000805160206107388339815191525490565b6103a0565b565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016330361014457610141816103c4565b50565b6101416100e0565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633036101f557610185836103c4565b6000836001600160a01b031683836040516101a19291906106bb565b600060405180830381855af49150503d80600081146101dc576040519150601f19603f3d011682016040523d82523d6000602084013e6101e1565b606091505b50509050806101ef57600080fd5b50505050565b6101fd6100e0565b505050565b60006001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016330361024857506000805160206107388339815191525490565b6102506100e0565b90565b600061026b6000805160206107388339815191525490565b6001600160a01b03161461027e57600080fd5b6102a960017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd6106cb565b600080516020610738833981519152146102c5576102c56106f2565b6102ce82610404565b80511561033d576000826001600160a01b0316826040516102ef9190610708565b600060405180830381855af49150503d806000811461032a576040519150601f19603f3d011682016040523d82523d6000602084013e61032f565b606091505b50509050806101fd57600080fd5b5050565b60006001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016330361024857507f000000000000000000000000000000000000000000000000000000000000000090565b61010661048f565b3660008037600080366000845af43d6000803e8080156103bf573d6000f35b3d6000fd5b6103cd81610404565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b803b61047d5760405162461bcd60e51b815260206004820152603b60248201527f43616e6e6f742073657420612070726f787920696d706c656d656e746174696f60448201527f6e20746f2061206e6f6e2d636f6e74726163742061646472657373000000000060648201526084015b60405180910390fd5b60008051602061073883398151915255565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633036101065760405162461bcd60e51b815260206004820152603260248201527f43616e6e6f742063616c6c2066616c6c6261636b2066756e6374696f6e20667260448201527137b6903a343290383937bc3c9030b236b4b760711b6064820152608401610474565b80356001600160a01b038116811461053957600080fd5b919050565b60006020828403121561055057600080fd5b61055982610522565b9392505050565b60008060006040848603121561057557600080fd5b61057e84610522565b9250602084013567ffffffffffffffff8082111561059b57600080fd5b818601915086601f8301126105af57600080fd5b8135818111156105be57600080fd5b8760208285010111156105d057600080fd5b6020830194508093505050509250925092565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561060c57600080fd5b61061583610522565b9150602083013567ffffffffffffffff8082111561063257600080fd5b818501915085601f83011261064657600080fd5b813581811115610658576106586105e3565b604051601f8201601f19908116603f01168101908382118183101715610680576106806105e3565b8160405282815288602084870101111561069957600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b8183823760009101908152919050565b818103818111156106ec57634e487b7160e01b600052601160045260246000fd5b92915050565b634e487b7160e01b600052600160045260246000fd5b6000825160005b81811015610729576020818601810151858301520161070f565b50600092019182525091905056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca26469706673582212203e6f195fa1d79d08c847770d5eed1aac42d06797b8a57fcb119c7d75a03a1a0f64736f6c63430008160033a2646970667358221220367514fe3f80e0d1f71ddde75be1f0bff104a5f8fba58990fc6dd213fc4f0cea64736f6c634300081600338be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101425760003560e01c80638da5cb5b116100b8578063e4ca28b71161007c578063e4ca28b714610254578063e860accb14610267578063ed301ca91461026f578063f2fde38b14610282578063f67b184714610295578063fca513a8146102a857600080fd5b80638da5cb5b146101f7578063a156440614610208578063ae7f78f91461021b578063ca446dd91461022e578063e44e9ed11461024157600080fd5b80635eb88d3d1161010a5780635eb88d3d146101b1578063631adfca146101b9578063707cd716146101c1578063715018a6146101c957806374944cec146101d157806376d84ffc146101e457600080fd5b8063026b1d5f146101475780630e67178c1461016c578063530e784f14610174578063568ef470146101895780635dcc528c1461019e575b600080fd5b61014f6102b0565b6040516001600160a01b0390911681526020015b60405180910390f35b61014f6102c7565b610187610182366004610f31565b6102de565b005b610191610399565b6040516101639190610fa5565b6101876101ac366004610fb8565b61042b565b61014f6104d0565b61014f6104f3565b61014f610512565b61018761052b565b6101876101df366004610f31565b61059f565b6101876101f2366004610f31565b61065a565b6000546001600160a01b031661014f565b610187610216366004610f31565b610709565b61014f610229366004610fe8565b61079c565b61018761023c366004610fb8565b6107b7565b61018761024f366004610f31565b61083f565b610187610262366004610f31565b6108f2565b61014f61099f565b61018761027d366004610f31565b6109ba565b610187610290366004610f31565b610a6b565b6101876102a3366004611017565b610b55565b61014f610b8b565b60006102c2631413d3d360e21b61079c565b905090565b60006102c26820a1a62fa0a226a4a760b91b61079c565b6000546001600160a01b031633146103115760405162461bcd60e51b8152600401610308906110c8565b60405180910390fd5b6b50524943455f4f5241434c4560a01b600090815260026020527f740f710666bd7a12af42df98311e541e47f7fd33d382d11602457a6d540cbd6380546001600160a01b038481166001600160a01b03198316811790935560405191169283917f56b5f80d8cac1479698aa7d01605fd6111e90b15fc4d2b377417f46034876cbd9190a35050565b6060600180546103a8906110fd565b80601f01602080910402602001604051908101604052809291908181526020018280546103d4906110fd565b80156104215780601f106103f657610100808354040283529160200191610421565b820191906000526020600020905b81548152906001019060200180831161040457829003601f168201915b5050505050905090565b6000546001600160a01b031633146104555760405162461bcd60e51b8152600401610308906110c8565b6000828152600260205260408120546001600160a01b03169061047784610ba5565b90506104838484610c42565b6040516001600160a01b038281168252808516919084169086907f3bbd45b5429b385e3fb37ad5cd1cd1435a3c8ec32196c7937597365a3fd3e99c9060200160405180910390a450505050565b60006102c27414149250d157d3d49050d31157d4d1539512539153605a1b61079c565b60006102c2702827a7a62fa1a7a72324a3aaa920aa27a960791b61079c565b60006102c26a20a1a62fa6a0a720a3a2a960a91b61079c565b6000546001600160a01b031633146105555760405162461bcd60e51b8152600401610308906110c8565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146105c95760405162461bcd60e51b8152600401610308906110c8565b7414149250d157d3d49050d31157d4d1539512539153605a1b600090815260026020527f0d2c1bcee56447b4f46248272f34207a580a5c40f666a31f4e2fbb470ea53ab880546001600160a01b038481166001600160a01b03198316811790935560405191169283917f5326514eeca90494a14bedabcff812a0e683029ee85d1e23824d44fd14cd6ae79190a35050565b6000546001600160a01b031633146106845760405162461bcd60e51b8152600401610308906110c8565b6820a1a62fa0a226a4a760b91b600090815260026020527ffab167ad2009dcb80ee379700bb4bd029d97c1181ed9d961625632c8a6f051c680546001600160a01b038481166001600160a01b03198316811790935560405191169283917fe9cf53972264dc95304fd424458745019ddfca0e37ae8f703d74772c41ad115b9190a35050565b6000546001600160a01b031633146107335760405162461bcd60e51b8152600401610308906110c8565b6000610745631413d3d360e21b610ba5565b9050610758631413d3d360e21b83610c42565b816001600160a01b0316816001600160a01b03167f90affc163f1a2dfedcd36aa02ed992eeeba8100a4014f0b4cdc20ea265a6662760405160405180910390a35050565b6000908152600260205260409020546001600160a01b031690565b6000546001600160a01b031633146107e15760405162461bcd60e51b8152600401610308906110c8565b60008281526002602052604080822080546001600160a01b031981166001600160a01b038681169182179093559251911692839186917f9ef0e8c8e52743bb38b83b17d9429141d494b8041ca6d616a6c77cebae9cd8b791a4505050565b6000546001600160a01b031633146108695760405162461bcd60e51b8152600401610308906110c8565b6c2220aa20afa82927ab24a222a960991b600090815260026020527fcd7944601aaa5cd7ccdae1bebec659e98c6aac8f12486b30e59db0d39698051f80546001600160a01b038481166001600160a01b03198316811790935560405191169283917fc853974cfbf81487a14a23565917bee63f527853bcb5fa54f2ae1cdf8a38356d9190a35050565b6000546001600160a01b0316331461091c5760405162461bcd60e51b8152600401610308906110c8565b600061093b702827a7a62fa1a7a72324a3aaa920aa27a960791b610ba5565b905061095b702827a7a62fa1a7a72324a3aaa920aa27a960791b83610c42565b816001600160a01b0316816001600160a01b03167f8932892569eba59c8382a089d9b732d1f49272878775235761a2a6b0309cd46560405160405180910390a35050565b60006102c26c2220aa20afa82927ab24a222a960991b61079c565b6000546001600160a01b031633146109e45760405162461bcd60e51b8152600401610308906110c8565b6a20a1a62fa6a0a720a3a2a960a91b600090815260026020527f9edef266ef35fd0c6e131df0f31a330f3dd4c4d19dd31ed615c21d005c68116b80546001600160a01b038481166001600160a01b03198316811790935560405191169283917fb30efa04327bb8a537d61cc1e5c48095345ad18ef7cc04e6bacf7dfb6caaf5079190a35050565b6000546001600160a01b03163314610a955760405162461bcd60e51b8152600401610308906110c8565b6001600160a01b038116610afa5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610308565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610b7f5760405162461bcd60e51b8152600401610308906110c8565b610b8881610e18565b50565b60006102c26b50524943455f4f5241434c4560a01b61079c565b6000818152600260205260408120546001600160a01b031680610bcb5750600092915050565b6000819050806001600160a01b0316635c60da1b6040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610c10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c349190611131565b949350505050565b50919050565b6000828152600260205260408082205490513060248201526001600160a01b039091169190819060440160408051601f198184030181529190526020810180516001600160e01b031663189acdbd60e31b17905290506001600160a01b038316610dad5730604051610cb390610f0f565b6001600160a01b039091168152602001604051809103906000f080158015610cdf573d6000803e3d6000fd5b506000868152600260205260409081902080546001600160a01b0319166001600160a01b038416908117909155905163347d5e2560e21b81529194508493509063d1f5789490610d35908790859060040161114e565b600060405180830381600087803b158015610d4f57600080fd5b505af1158015610d63573d6000803e3d6000fd5b50505050836001600160a01b0316836001600160a01b0316867f4a465a9bd819d9662563c1e11ae958f8109e437e7f4bf1c6ef0b9a7b3f35d47860405160405180910390a4610e11565b60405163278f794360e11b81528392506001600160a01b03831690634f1ef28690610dde908790859060040161114e565b600060405180830381600087803b158015610df857600080fd5b505af1158015610e0c573d6000803e3d6000fd5b505050505b5050505050565b600060018054610e27906110fd565b80601f0160208091040260200160405190810160405280929190818152602001828054610e53906110fd565b8015610ea05780601f10610e7557610100808354040283529160200191610ea0565b820191906000526020600020905b815481529060010190602001808311610e8357829003601f168201915b505050505090508160019081610eb691906111c3565b5081604051610ec59190611283565b604051809103902081604051610edb9190611283565b604051908190038120907fe685c8cdecc6030c45030fd54778812cb84ed8e4467c38294403d68ba786082390600090a35050565b61083b806112a083390190565b6001600160a01b0381168114610b8857600080fd5b600060208284031215610f4357600080fd5b8135610f4e81610f1c565b9392505050565b60005b83811015610f70578181015183820152602001610f58565b50506000910152565b60008151808452610f91816020860160208601610f55565b601f01601f19169290920160200192915050565b602081526000610f4e6020830184610f79565b60008060408385031215610fcb57600080fd5b823591506020830135610fdd81610f1c565b809150509250929050565b600060208284031215610ffa57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561102957600080fd5b813567ffffffffffffffff8082111561104157600080fd5b818401915084601f83011261105557600080fd5b81358181111561106757611067611001565b604051601f8201601f19908116603f0116810190838211818310171561108f5761108f611001565b816040528281528760208487010111156110a857600080fd5b826020860160208301376000928101602001929092525095945050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181811c9082168061111157607f821691505b602082108103610c3c57634e487b7160e01b600052602260045260246000fd5b60006020828403121561114357600080fd5b8151610f4e81610f1c565b6001600160a01b0383168152604060208201819052600090610c3490830184610f79565b601f8211156111be576000816000526020600020601f850160051c8101602086101561119b5750805b601f850160051c820191505b818110156111ba578281556001016111a7565b5050505b505050565b815167ffffffffffffffff8111156111dd576111dd611001565b6111f1816111eb84546110fd565b84611172565b602080601f831160018114611226576000841561120e5750858301515b600019600386901b1c1916600185901b1785556111ba565b600085815260208120601f198616915b8281101561125557888601518255948401946001909101908401611236565b50858210156112735787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008251611295818460208701610f55565b919091019291505056fe60a060405234801561001057600080fd5b5060405161083b38038061083b83398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b60805161078d6100ae60003960008181610112015281816101560152818161020e0152818161034d015281816103760152610499015261078d6000f3fe60806040526004361061004a5760003560e01c80633659cfe6146100545780634f1ef286146100745780635c60da1b14610087578063d1f57894146100b8578063f851a440146100cb575b6100526100e0565b005b34801561006057600080fd5b5061005261006f36600461053e565b610108565b610052610082366004610560565b61014c565b34801561009357600080fd5b5061009c610202565b6040516001600160a01b03909116815260200160405180910390f35b6100526100c63660046105f9565b610253565b3480156100d757600080fd5b5061009c610341565b6100e8610398565b6101066101016000805160206107388339815191525490565b6103a0565b565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016330361014457610141816103c4565b50565b6101416100e0565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633036101f557610185836103c4565b6000836001600160a01b031683836040516101a19291906106bb565b600060405180830381855af49150503d80600081146101dc576040519150601f19603f3d011682016040523d82523d6000602084013e6101e1565b606091505b50509050806101ef57600080fd5b50505050565b6101fd6100e0565b505050565b60006001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016330361024857506000805160206107388339815191525490565b6102506100e0565b90565b600061026b6000805160206107388339815191525490565b6001600160a01b03161461027e57600080fd5b6102a960017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd6106cb565b600080516020610738833981519152146102c5576102c56106f2565b6102ce82610404565b80511561033d576000826001600160a01b0316826040516102ef9190610708565b600060405180830381855af49150503d806000811461032a576040519150601f19603f3d011682016040523d82523d6000602084013e61032f565b606091505b50509050806101fd57600080fd5b5050565b60006001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016330361024857507f000000000000000000000000000000000000000000000000000000000000000090565b61010661048f565b3660008037600080366000845af43d6000803e8080156103bf573d6000f35b3d6000fd5b6103cd81610404565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b803b61047d5760405162461bcd60e51b815260206004820152603b60248201527f43616e6e6f742073657420612070726f787920696d706c656d656e746174696f60448201527f6e20746f2061206e6f6e2d636f6e74726163742061646472657373000000000060648201526084015b60405180910390fd5b60008051602061073883398151915255565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633036101065760405162461bcd60e51b815260206004820152603260248201527f43616e6e6f742063616c6c2066616c6c6261636b2066756e6374696f6e20667260448201527137b6903a343290383937bc3c9030b236b4b760711b6064820152608401610474565b80356001600160a01b038116811461053957600080fd5b919050565b60006020828403121561055057600080fd5b61055982610522565b9392505050565b60008060006040848603121561057557600080fd5b61057e84610522565b9250602084013567ffffffffffffffff8082111561059b57600080fd5b818601915086601f8301126105af57600080fd5b8135818111156105be57600080fd5b8760208285010111156105d057600080fd5b6020830194508093505050509250925092565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561060c57600080fd5b61061583610522565b9150602083013567ffffffffffffffff8082111561063257600080fd5b818501915085601f83011261064657600080fd5b813581811115610658576106586105e3565b604051601f8201601f19908116603f01168101908382118183101715610680576106806105e3565b8160405282815288602084870101111561069957600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b8183823760009101908152919050565b818103818111156106ec57634e487b7160e01b600052601160045260246000fd5b92915050565b634e487b7160e01b600052600160045260246000fd5b6000825160005b81811015610729576020818601810151858301520161070f565b50600092019182525091905056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca26469706673582212203e6f195fa1d79d08c847770d5eed1aac42d06797b8a57fcb119c7d75a03a1a0f64736f6c63430008160033a2646970667358221220367514fe3f80e0d1f71ddde75be1f0bff104a5f8fba58990fc6dd213fc4f0cea64736f6c63430008160033",
  "devdoc": {
    "author": "Aave",
    "details": "Acts as factory of proxies and admin of those, so with right to change its implementationsOwned by the Aave Governance",
    "events": {
      "ACLAdminUpdated(address,address)": {
        "details": "Emitted when the ACL admin is updated.",
        "params": {
          "newAddress": "The new address of the ACLAdmin",
          "oldAddress": "The old address of the ACLAdmin"
        }
      },
      "ACLManagerUpdated(address,address)": {
        "details": "Emitted when the ACL manager is updated.",
        "params": {
          "newAddress": "The new address of the ACLManager",
          "oldAddress": "The old address of the ACLManager"
        }
      },
      "AddressSet(bytes32,address,address)": {
        "details": "Emitted when a new non-proxied contract address is registered.",
        "params": {
          "id": "The identifier of the contract",
          "newAddress": "The address of the new contract",
          "oldAddress": "The address of the old contract"
        }
      },
      "AddressSetAsProxy(bytes32,address,address,address)": {
        "details": "Emitted when the implementation of the proxy registered with id is updated",
        "params": {
          "id": "The identifier of the contract",
          "newImplementationAddress": "The address of the new implementation contract",
          "oldImplementationAddress": "The address of the old implementation contract",
          "proxyAddress": "The address of the proxy contract"
        }
      },
      "MarketIdSet(string,string)": {
        "details": "Emitted when the market identifier is updated.",
        "params": {
          "newMarketId": "The new id of the market",
          "oldMarketId": "The old id of the market"
        }
      },
      "PoolConfiguratorUpdated(address,address)": {
        "details": "Emitted when the pool configurator is updated.",
        "params": {
          "newAddress": "The new address of the PoolConfigurator",
          "oldAddress": "The old address of the PoolConfigurator"
        }
      },
      "PoolDataProviderUpdated(address,address)": {
        "details": "Emitted when the pool data provider is updated.",
        "params": {
          "newAddress": "The new address of the PoolDataProvider",
          "oldAddress": "The old address of the PoolDataProvider"
        }
      },
      "PoolUpdated(address,address)": {
        "details": "Emitted when the pool is updated.",
        "params": {
          "newAddress": "The new address of the Pool",
          "oldAddress": "The old address of the Pool"
        }
      },
      "PriceOracleSentinelUpdated(address,address)": {
        "details": "Emitted when the price oracle sentinel is updated.",
        "params": {
          "newAddress": "The new address of the PriceOracleSentinel",
          "oldAddress": "The old address of the PriceOracleSentinel"
        }
      },
      "PriceOracleUpdated(address,address)": {
        "details": "Emitted when the price oracle is updated.",
        "params": {
          "newAddress": "The new address of the PriceOracle",
          "oldAddress": "The old address of the PriceOracle"
        }
      },
      "ProxyCreated(bytes32,address,address)": {
        "details": "Emitted when a new proxy is created.",
        "params": {
          "id": "The identifier of the proxy",
          "implementationAddress": "The address of the implementation contract",
          "proxyAddress": "The address of the created proxy contract"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Constructor.",
        "params": {
          "marketId": "The identifier of the market.",
          "owner": "The owner address of this contract."
        }
      },
      "getACLAdmin()": {
        "returns": {
          "_0": "The address of the ACL admin"
        }
      },
      "getACLManager()": {
        "returns": {
          "_0": "The address of the ACLManager"
        }
      },
      "getAddressFromID(bytes32)": {
        "details": "The returned address might be an EOA or a contract, potentially proxiedIt returns ZERO if there is no registered address with the given id",
        "params": {
          "id": "The id"
        },
        "returns": {
          "_0": "The address of the registered for the specified id"
        }
      },
      "getMarketId()": {
        "returns": {
          "_0": "The market id"
        }
      },
      "getPool()": {
        "returns": {
          "_0": "The Pool proxy address"
        }
      },
      "getPoolConfigurator()": {
        "returns": {
          "_0": "The PoolConfigurator proxy address"
        }
      },
      "getPoolDataProvider()": {
        "returns": {
          "_0": "The address of the DataProvider"
        }
      },
      "getPriceOracle()": {
        "returns": {
          "_0": "The address of the PriceOracle"
        }
      },
      "getPriceOracleSentinel()": {
        "returns": {
          "_0": "The address of the PriceOracleSentinel"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setACLAdmin(address)": {
        "params": {
          "newAclAdmin": "The address of the new ACL admin"
        }
      },
      "setACLManager(address)": {
        "params": {
          "newAclManager": "The address of the new ACLManager"
        }
      },
      "setAddress(bytes32,address)": {
        "details": "IMPORTANT Use this function carefully, as it will do a hard replacement",
        "params": {
          "id": "The id",
          "newAddress": "The address to set"
        }
      },
      "setAddressAsProxy(bytes32,address)": {
        "details": "IMPORTANT Use this function carefully, only for ids that don't have an explicit setter function, in order to avoid unexpected consequences",
        "params": {
          "id": "The id",
          "newImplementationAddress": "The address of the new implementation"
        }
      },
      "setMarketId(string)": {
        "details": "This can be used to create an onchain registry of PoolAddressesProviders to identify and validate multiple Aave markets.",
        "params": {
          "newMarketId": "The market id"
        }
      },
      "setPoolConfiguratorImpl(address)": {
        "params": {
          "newPoolConfiguratorImpl": "The new PoolConfigurator implementation"
        }
      },
      "setPoolDataProvider(address)": {
        "params": {
          "newDataProvider": "The address of the new DataProvider"
        }
      },
      "setPoolImpl(address)": {
        "params": {
          "newPoolImpl": "The new Pool implementation"
        }
      },
      "setPriceOracle(address)": {
        "params": {
          "newPriceOracle": "The address of the new PriceOracle"
        }
      },
      "setPriceOracleSentinel(address)": {
        "params": {
          "newPriceOracleSentinel": "The address of the new PriceOracleSentinel"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "PoolAddressesProvider",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getACLAdmin()": {
        "notice": "Returns the address of the ACL admin."
      },
      "getACLManager()": {
        "notice": "Returns the address of the ACL manager."
      },
      "getAddressFromID(bytes32)": {
        "notice": "Returns an address by its identifier."
      },
      "getMarketId()": {
        "notice": "Returns the id of the Aave market to which this contract points to."
      },
      "getPool()": {
        "notice": "Returns the address of the Pool proxy."
      },
      "getPoolConfigurator()": {
        "notice": "Returns the address of the PoolConfigurator proxy."
      },
      "getPoolDataProvider()": {
        "notice": "Returns the address of the data provider."
      },
      "getPriceOracle()": {
        "notice": "Returns the address of the price oracle."
      },
      "getPriceOracleSentinel()": {
        "notice": "Returns the address of the price oracle sentinel."
      },
      "setACLAdmin(address)": {
        "notice": "Updates the address of the ACL admin."
      },
      "setACLManager(address)": {
        "notice": "Updates the address of the ACL manager."
      },
      "setAddress(bytes32,address)": {
        "notice": "Sets an address for an id replacing the address saved in the addresses map."
      },
      "setAddressAsProxy(bytes32,address)": {
        "notice": "General function to update the implementation of a proxy registered with certain `id`. If there is no proxy registered, it will instantiate one and set as implementation the `newImplementationAddress`."
      },
      "setMarketId(string)": {
        "notice": "Associates an id with a specific PoolAddressesProvider."
      },
      "setPoolConfiguratorImpl(address)": {
        "notice": "Updates the implementation of the PoolConfigurator, or creates a proxy setting the new `PoolConfigurator` implementation when the function is called for the first time."
      },
      "setPoolDataProvider(address)": {
        "notice": "Updates the address of the data provider."
      },
      "setPoolImpl(address)": {
        "notice": "Updates the implementation of the Pool, or creates a proxy setting the new `pool` implementation when the function is called for the first time."
      },
      "setPriceOracle(address)": {
        "notice": "Updates the address of the price oracle."
      },
      "setPriceOracleSentinel(address)": {
        "notice": "Updates the address of the price oracle sentinel."
      }
    },
    "notice": "Main registry of addresses part of or connected to the protocol, including permissioned roles",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 28690,
        "contract": "contracts/dlend/core/protocol/configuration/PoolAddressesProvider.sol:PoolAddressesProvider",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 35614,
        "contract": "contracts/dlend/core/protocol/configuration/PoolAddressesProvider.sol:PoolAddressesProvider",
        "label": "_marketId",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 35618,
        "contract": "contracts/dlend/core/protocol/configuration/PoolAddressesProvider.sol:PoolAddressesProvider",
        "label": "_addresses",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_bytes32,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_bytes32,t_address)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      }
    }
  }
}
